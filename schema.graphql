type ProtectionPool @entity {
  id: ID!
  address: Bytes!
  underlyingToken: Bytes!
  referenceLendingPools: Bytes!
  totalSTokenUnderlying: Int!
  totalProtection: Int!
  leverageRatio: Int!
  cycleDuration: Int!
  openCycleDuration: Int!
  currentCycleIndex: Int!
  remainingDaysInCurrentCycle: Int!
  renewalAllowancePeriod: Int!
  minProtectionDurationInSeconds: Int!
  maxProtectionDurationInSeconds: Int!
}

type LendingPool @entity {
  id: ID!
  protocol: String!
  address: Bytes!
  protectionPool: ProtectionPool!
  totalProtection: Int!
  protectionPurchaseLimitTimestamp: Int!
}

type User @entity {
  id: ID!
  address: Bytes!
  protectionBought: [ProtectionBought!]
  deposit: [Deposit!]
  withdrawalRequest: [WithdrawalRequest!]
}

type ProtectionBought @entity {
  id: ID!
  nftLpTokenId: Int!
  premiumAmount: Int!
  lendingPool: LendingPool!
  protectionAmount: Int!
  protectionDurationInSeconds: Int!
}

type Deposit @entity {
  id: ID!
  protectionPool: ProtectionPool!
  underlyingAmount: Int!
}

type WithdrawalRequest @entity {
  id: ID!
  protectionPool: ProtectionPool!
  sTokenAmount: Int!
  withdrawalCycleIndex: Int!
}
