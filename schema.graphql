type ProtectionPool @entity {
  id: ID! # protection pool address
  underlyingToken: Bytes!
  referenceLendingPools: Bytes!
  totalSTokenUnderlying: BigInt!
  totalProtection: BigInt!
  leverageRatio: BigInt!
  cycleDuration: BigInt!
  openCycleDuration: BigInt!
  currentCycleIndex: BigInt!
  currentCycleStartTime: BigInt!
  minProtectionDurationInSeconds: BigInt!
  protectionRenewalGracePeriodInSeconds: BigInt!
}

type LendingPool @entity {
  id: ID! # lending pool address
  protocol: String!
  addedTimestamp: BigInt!
  protectionPurchaseLimitTimestamp: BigInt!
  totalProtection: BigInt!
}

type User @entity {
  id: ID! # user address
  sTokenAmount: BigInt!
  protections: [Protection!]! @deriveFrom(field: "user")
  withdrawalRequests: [WithdrawalRequest!]! @deriveFrom(field: "user")
}

type SToken @entity {
  id: ID! # transaction hash
  userAddress: Bytes!
  sTokenAmount: BigInt!
}

type Protection @entity {
  id: ID! # transaction hash
  userAddress: Bytes!
  nftLpTokenId: BigInt!
  premiumAmount: BigInt!
  lendingPool: LendingPool!
  protectionAmount: BigInt!
  startTimestamp: BigInt!
  protectionDurationInSeconds: BigInt!
  user: User!
}

type WithdrawalRequest @entity {
  id: ID! # transaction hash
  userAddress: Bytes!
  sTokenAmount: BigInt!
  withdrawalCycleIndex: BigInt!
  user: User!
}
